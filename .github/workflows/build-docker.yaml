name: Build & publish PeerPrep images
on:
  pull_request:
    # types: [review_requested, ready_for_review]
  push:
    branches: 
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      user: ${{ steps.filter.outputs.backend.user }}
      question: ${{ steps.filter.outputs.backend.question }}
      collaboration: ${{ steps.filter.outputs.backend.collaboration }}
      matching: ${{ steps.filter.outputs.backend.matching }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            user:
              - 'backend/user/**'
            question:
              - 'backend/question/**'
            collaboration:
              - 'backend/collaboration/**'
            matching:
              - 'backend/matching/**'
          frontend:
            - 'frontend/**'

  build-and-push-image:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - package: user
            image: ay2425s1cs3219g16/user-express
            context: ./backend/user
            dockerfile: ./backend/user/express.Dockerfile
            build-args: |
              port=9001
          - package: question
            image: ay2425s1cs3219g16/question-express
            context: ./backend/question
            dockerfile:  ./backend/question/express.Dockerfile
            build-args: |
              port=9002
          - package: collaboration
            image: ay2425s1cs3219g16/collab-express
            context: ./backend/collaboration
            dockerfile:  ./backend/collaboration/express.Dockerfile
            build-args: |
              port=9003
          - package: matching
            image: ay2425s1cs3219g16/match-express
            context: ./backend/matching
            dockerfile:  ./backend/matching/express.Dockerfile
            build-args: |
              port=9004
          - package: frontend
            image: ay2425s1cs3219g16/frontend
            context: ./frontend
            dockerfile:  ./frontend/frontend.Dockerfile
            build-args: |
              port=3000
    if: ${{ needs.changes[matrix.package] == 'true' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker images for PeerPrep Services
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          build-args: ${{ matrix.build-args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
