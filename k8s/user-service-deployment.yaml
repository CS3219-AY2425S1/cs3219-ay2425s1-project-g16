apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: user-service
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/code-user-api-network: "true"
        io.kompose.network/code-user-db-network: "true"
        io.kompose.service: user-service
    spec:
      containers:
        - command:
            - /bin/sh
            - entrypoint.sh
          env:
            - name: EXPRESS_DB_HOST
              value: user-db
            - name: EXPRESS_DB_PORT
              value: "5432"
            - name: EXPRESS_ENV
              value: compose
            - name: EXPRESS_JWT_SECRET_KEY
              value: jd+9qlXA0a3YsmVf2KJgyiJ3SprIR318IAwhRXck4Y8=
            - name: EXPRESS_PORT
              value: "9001"
            - name: PEERPREP_UI_HOST
              value: http://frontend:3000
            - name: PGDATA
              value: /data/user-db
            - name: POSTGRES_DB
              value: user
            - name: POSTGRES_PASSWORD
              value: 69/X8JxtAVsM+0YHT4RR5D7Ahf7bTobI4EED64FrzIU=
            - name: POSTGRES_USER
              value: peerprep-user-express
          image: user-express
          name: user-express
          ports:
            - containerPort: 9001
              hostPort: 9001
              protocol: TCP
          volumeMounts:
            - mountPath: /data/user-express
              name: user-service
      restartPolicy: Always
      volumes:
        - name: user-service
          persistentVolumeClaim:
            claimName: user-service
