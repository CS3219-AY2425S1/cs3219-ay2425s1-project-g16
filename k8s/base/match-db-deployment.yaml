#! match-db-deployment.yaml
# Generated code, do not edit
apiVersion: apps/v1
kind: Deployment
metadata:
    name: match-db
    namespace: code
    labels:
        com.docker.compose.project: code
        com.docker.compose.service: match-db
spec:
    replicas: 1
    selector:
        matchLabels:
            com.docker.compose.project: code
            com.docker.compose.service: match-db
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                com.docker.compose.project: code
                com.docker.compose.service: match-db
                com.docker.compose.network.match-db-network: "true"
        spec:
            restartPolicy: unless-stopped
            containers:
                - name: match-db
                  image: redis/redis-stack-server
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: EXPRESS_PORT
                      value: "9004"
                    - name: MATCHING_DB_PASSWORD
                      value: "G7jBgyz9wGAFQ5La"
                    - name: MATCHING_DB_PORT
                      value: "6379"
                    - name: MATCHING_DB_USERNAME
                      value: "peerprep-match-express"
                    - name: REDIS_ARGS
                      value: "--requirepass G7jBgyz9wGAFQ5La --user peerprep-match-express on >G7jBgyz9wGAFQ5La ~* allcommands --user default off nopass nocommands"
                  ports:
                    - name: match-db-6379
                      containerPort: 6379
                  volumeMounts:
                    - name: data
                      mountPath: /data
            volumes:
                - name: data
                  persistentVolumeClaim:
                    claimName: match-db-match-db-docker
