# Command: docker-compose --env-file .env.local up -d

services:
  # Databases

  user-db:
    hostname: 'user-db'
    image: postgres:16.4
    container_name: 'user-db'
    build:
      context: ./backend/user/src/lib/db
    env_file:
      - ./backend/user/.env.local
    volumes:
      - 'user-db-docker:${USER_PGDATA}'
    restart: unless-stopped
    networks:
      - user-db-network

  collab-db:
    hostname: 'collab-db'
    image: 'postgres:16.4'
    container_name: 'collab-db'
    build:
      context: ./backend/collaboration/src/lib/db
    env_file:
      - ./backend/collaboration/.env.local
    volumes:
      - 'collab-db-docker:/${COLLAB_PGDATA}'
    restart: unless-stopped
    networks:
      - collab-db-network

  question-db:
    hostname: 'question-db'
    image: postgres:16.4
    container_name: 'question-db'
    build:
      context: ./backend/question/src/lib/db
    env_file:
      - ./backend/question/.env.local
    volumes:
      - 'question-db-docker:${QUESTION_PGDATA}'
    restart: unless-stopped
    networks:
      - question-db-network

  # Services

  user-service:
    image: 'user-express'
    container_name: 'user-express'
    build:
      context: ./backend/user
      dockerfile: ./express.Dockerfile
      target: build
      args:
        # For building with the correct env vars
        - env=${USER_EXPRESS_ENV}
        - port=${USER_EXPRESS_PORT}
    ports:
      - '9001:${USER_EXPRESS_PORT}'
    env_file:
      - ./backend/user/.env.compose
    environment:
      # Docker Compose Specific
      - EXPRESS_DB_HOST=user-db
      - EXPRESS_DB_PORT=5432
    volumes:
      - user-service:/data/user-express
    depends_on:
      - user-db
    networks:
      - user-db-network
      - user-api-network
    entrypoint: ['/bin/sh', 'entrypoint.sh']

  # Frontend

  frontend:
    container_name: 'frontend'
    build:
      context: ./frontend
      dockerfile: ./frontend.Dockerfile
      args:
        - VITE_USER_SERVICE=http://${USER_SERVICE_NAME}:${USER_EXPRESS_PORT}
        - VITE_QUESTION_SERVICE=http://${QUESTION_SERVICE_NAME}:${QUESTION_EXPRESS_PORT}
        - port=${FRONTEND_PORT}
    ports:
      - '3000:${FRONTEND_PORT}'
    env_file:
      - ./frontend/.env.compose
    environment:
      - VITE_USER_SERVICE=http://${USER_SERVICE_NAME}:${USER_EXPRESS_PORT}
      - VITE_QUESTION_SERVICE=http://localhost:${QUESTION_EXPRESS_PORT}
      - port=${FRONTEND_PORT}
    # depends_on:
    #   - user-service
    networks:
      - user-api-network
      - question-api-network
      - collab-api-network

volumes:
  user-service:
    external: false
  question-service:
    external: false
  collab-service:
    external: false

  # Persistent Volumes for Databases
  user-db-docker:
    external: true
  collab-db-docker:
    external: true
  question-db-docker:
    external: true

networks:
  # Isolated API Server Networks
  user-db-network:
    driver: bridge
  question-db-network:
    driver: bridge
  collab-db-network:
    driver: bridge

  # View-Controller Networks
  user-api-network:
    driver: bridge
  question-api-network:
    driver: bridge
  collab-api-network:
    driver: bridge
